{
  "info": {
    "_postman_id": "f3912ea2-7a4c-4e25-8279-761ca4821011",
    "name": "secure-docs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "33689712"
  },
  "item": [
    {
      "name": "createUser",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "const generatedEmail = pm.environment.get(\"uniqueEmail\");",
              "",
              "pm.test(\"User created successfully\", function () {",
              "  pm.expect(jsonData.data).to.have.property(\"createUser\");",
              "  pm.expect(jsonData.data.createUser.email).to.eql(generatedEmail);",
              "});",
              "",
              "// üîê Sauvegarde de l'email pour le login",
              "pm.environment.set(\"email\", generatedEmail);",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set(\"uniqueEmail\", `user_${Date.now()}@mail.com`);"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation {\n  createUser(input: {\n    email: \"{{uniqueEmail}}\",\n    password: \"motdepasse\",\n    name: \"testuser\"\n  }) {\n    id\n    email\n  }\n}\n",
            "variables": ""
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    },
    {
      "name": "login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.test(\"Token is returned\", function () {",
              "  pm.expect(jsonData.data && jsonData.data.login).to.exist;",
              "  pm.expect(jsonData.data.login.access_token).to.be.a(\"string\");",
              "});",
              "",
              "// Stocke le token dans l'environnement",
              "pm.environment.set(\"access_token\", jsonData.data.login.access_token);",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "graphql",
          "graphql": {
            "query": "mutation {\n  login(input: {email: \"{{email}}\", password: \"motdepasse\"}) {\n    access_token\n  }\n}\n",
            "variables": ""
          }
        },
        "url": {
          "raw": "http://localhost:3000/graphql",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["graphql"]
        }
      },
      "response": []
    }
  ]
}
